{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/about/about.component.css","./src/app/about/about.component.html","./src/app/about/about.component.ts","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/dqn-method/dqn-method.component.css","./src/app/dqn-method/dqn-method.component.html","./src/app/dqn-method/dqn-method.component.ts","./src/app/navigation/navigation.component.css","./src/app/navigation/navigation.component.html","./src/app/navigation/navigation.component.ts","./src/app/simulation/simulation.component.css","./src/app/simulation/simulation.component.html","./src/app/simulation/simulation.component.ts","./src/app/simulation/utils/canvas.utility.ts","./src/app/simulation/utils/collision-stats.utility.ts","./src/app/simulation/utils/collision.utility.ts","./src/app/simulation/utils/flot.charts.ts","./src/app/simulation/utils/specs.utility.ts","./src/environments/environment.prod.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"/* app-about {\\n  margin: 5px;\\n  padding: 5px;\\n}\\n */\\n\\nli{\\n    margin-top: 10px;\\n}\\n\\nli:first-child {\\n    margin-top:0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.css\n// module id = ./src/app/about/about.component.css\n// module chunks = main","module.exports = \"<mat-card id=\\\"about-panel\\\">\\n  <mat-card-header>\\n    <mat-card-title>About</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content id=\\\"about-content\\\">\\n    <p>\\n      \\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card id=\\\"license-panel\\\">\\n  <mat-card-header>\\n    <mat-card-title>Dependencies</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content id=\\\"about-content\\\">\\n    <ol style=\\\"line-height: 1.15;\\\">\\n      <li>\\n        <a href=\\\"https://github.com/mvrahden/learning-agents-model\\\"><b>Learning Agents Model</b></a>\\n              &ndash; Implementation of World Objects\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/mvrahden/reinforce-js\\\"><b>reinforce-js</b></a>\\n              &ndash; Implementation of Deep-Q-Solver\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/mvrahden/recurrent-js\\\"><b>recurrent-js</b></a>\\n              &ndash; Implementation of Graph Model, Matrix-Operations and Neural Network Structure\\n      </li>\\n      <li>\\n        <a href=\\\"https://angular.io/\\\"><b>Angular</b></a>\\n              &ndash; Mobile &amp; Desktop Frontend Framework\\n      </li>\\n    </ol>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card id=\\\"license-panel\\\">\\n  <mat-card-header>\\n    <mat-card-title>License</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content id=\\\"about-content\\\" style=\\\"text-align:justify\\\">\\n    <p>\\n      The MIT License Copyright (c) 2017 Menno van Rahden\\n    </p>\\n    <p>\\n      Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\\n      files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\\n      modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\\n      is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be\\n      included in all copies or substantial portions of the Software.\\n    </p>\\n    <p>\\n      THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\n      OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\\n      OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = ./src/app/about/about.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AboutComponent } from './about/about.component';\nimport { SimulationComponent } from './simulation/simulation.component';\nimport { DQNComponent } from './dqn-method/dqn-method.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/#', pathMatch: 'full' },\n  { path: 'simulation', redirectTo: '/#', pathMatch: 'full' },\n  { path: '', component: SimulationComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'dqn-method', component: DQNComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { AboutComponent } from './about/about.component';\nimport { DQNComponent } from './dqn-method/dqn-method.component';\nimport { SimulationComponent } from './simulation/simulation.component';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    AppRoutingModule,\n  ],\n  declarations: [\n    NavigationComponent,\n    AboutComponent,\n    DQNComponent,\n    SimulationComponent\n  ],\n  providers: [],\n  bootstrap: [NavigationComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"/* app-about {\\n  margin: 5px;\\n  padding: 5px;\\n}\\n */\\n\\nli{\\n    margin-top: 10px;\\n}\\n\\nli:first-child {\\n    margin-top:0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dqn-method/dqn-method.component.css\n// module id = ./src/app/dqn-method/dqn-method.component.css\n// module chunks = main","module.exports = \"<mat-card id=\\\"about-panel\\\">\\n  <mat-card-header>\\n    <mat-card-title>About</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content id=\\\"about-content\\\">\\n    <p>\\n      \\n    </p>\\n  </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dqn-method/dqn-method.component.html\n// module id = ./src/app/dqn-method/dqn-method.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './dqn-method.component.html',\n  styleUrls: ['./dqn-method.component.css']\n})\nexport class DQNComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dqn-method/dqn-method.component.ts","module.exports = \"/* AppComponent's private CSS styles */\\n#nav-bar-panel {\\n  background-color: rgb(204, 204, 204);\\n  padding: 0px;\\n  margin: 0px;\\n}\\nmat-ink-bar > .mat-ink-bar {\\n  background-color: rgb(0, 0, 0);\\n}\\n#app-content {\\n  margin: 0 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navigation/navigation.component.css\n// module id = ./src/app/navigation/navigation.component.css\n// module chunks = main","module.exports = \"<nav mat-tab-nav-bar id=\\\"nav-bar-panel\\\">\\n  <a mat-tab-link\\n    *ngFor=\\\"let link of links\\\"\\n    [routerLink]=\\\"link.route\\\"\\n    routerLinkActive #rla=\\\"routerLinkActive\\\"\\n    [active]=\\\"rla.isActive\\\">\\n    {{link.label}}\\n  </a>\\n</nav>\\n<div id=\\\"app-content\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navigation/navigation.component.html\n// module id = ./src/app/navigation/navigation.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n  links = [{\n    label: 'Simulation',\n    route: '/simulation'\n  }, {\n    label: 'DQN-Method',\n    route: '/dqn-method'\n  }, {\n    label: 'About',\n    route: '/about'\n    }\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navigation/navigation.component.ts","module.exports = \"#sim-control-panel, #chart-control-panel {\\n  width: 100%;\\n}\\n\\n.button-row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  margin: 15px 0;\\n}\\n\\n#chart-control-panel > .button-row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: right;\\n      -ms-flex-align: right;\\n          align-items: right;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n  margin-bottom: 5px;\\n}\\n\\ntable, td, th {\\n  border: none;\\n  border-collapse: collapse;\\n}\\n\\ntd, th {\\n  padding: 10px 5px;\\n  display: table-cell;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\ntable > tbody > tr > td {\\n  -ms-flex-line-pack: center;\\n      align-content: center;\\n  font-size: 14px;\\n  font-weight: lighter;\\n  line-height: 1.5;\\n  border: 0;\\n  border-radius: 0;\\n}\\n\\ntable > thead > tr > th {\\n  -ms-flex-line-pack: center;\\n      align-content: center;\\n  font-size: 14px;\\n  font-weight: bold;\\n  line-height: 1.5;\\n  border-bottom: 1px solid rgb(208, 208, 208);\\n}\\n\\ntable > tbody > tr:hover {\\n  -webkit-transition: background-color .25s ease;\\n  transition: background-color .25s ease;\\n  background-color: rgb(242, 242, 242);\\n}\\n\\n/* mat-card.reward-chart {\\n  width: 600px;\\n  height: 300px;\\n} */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/simulation/simulation.component.css\n// module id = ./src/app/simulation/simulation.component.css\n// module chunks = main","module.exports = \"<mat-card id=\\\"simulation-panel\\\">\\n  <mat-card-header>\\n    <mat-card-title>Simulation</mat-card-title>\\n  </mat-card-header>\\n  <div id=\\\"sim-control-panel\\\">\\n    <div id=\\\"sim-control-buttons\\\">\\n      <mat-button-toggle-group class=\\\"button-row\\\">\\n        <button mat-button color=\\\"primary\\\" *ngIf=\\\"!isPaused\\\" (click)=\\\"pause()\\\">Pause</button>\\n        <button mat-button color=\\\"warn\\\" *ngIf=\\\"isPaused\\\" (click)=\\\"start()\\\">Run</button>\\n        <button mat-button (click)=\\\"reset()\\\">Reset</button>\\n        <button mat-button color=\\\"accent\\\" *ngIf=\\\"!isPausedDrawing\\\" (click)=\\\"pauseDrawing()\\\">Pause Visualization</button>\\n        <button mat-button color=\\\"warn\\\" *ngIf=\\\"isPausedDrawing\\\" (click)=\\\"pauseDrawing()\\\">Run Visualization</button>\\n      </mat-button-toggle-group>\\n    </div>\\n    <div id=\\\"sim-speed-buttons\\\">\\n      <mat-button-toggle-group class=\\\"button-row\\\" value=\\\"{{simSpeedIndex}}\\\">\\n        <mat-button-toggle value=\\\"3\\\" (click)=\\\"goMax()\\\">Max</mat-button-toggle>\\n        <mat-button-toggle value=\\\"2\\\" (click)=\\\"goFast()\\\">Fast</mat-button-toggle>\\n        <mat-button-toggle value=\\\"1\\\" (click)=\\\"goNormal()\\\">Normal</mat-button-toggle>\\n        <mat-button-toggle value=\\\"0\\\" (click)=\\\"goSlow()\\\">Slow</mat-button-toggle>\\n      </mat-button-toggle-group>\\n    </div>\\n  </div>\\n  <canvas id=\\\"simulation\\\" width=\\\"{{width}}\\\" height=\\\"{{height}}\\\"></canvas>\\n  <div id=\\\"data-table\\\">\\n    <table width=\\\"100%\\\" class=\\\"highlight\\\">\\n      <thead>\\n        <tr>\\n          <th>Id</th>\\n          <th>tot. green Items</th>\\n          <th>tot. red Items</th>\\n          <th>curr. green Items</th>\\n          <th>curr. red Items</th>\\n          <th>Walls</th>\\n          <th>Agents</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let collision of collisionStats.collisions; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n          <td>{{i + 1}}</td>\\n          <td>{{collision.totalItem0Collisions}}</td>\\n          <td>{{collision.totalItem1Collisions}}</td>\\n          <td>{{collision.item0Collisions}}</td>\\n          <td>{{collision.item1Collisions}}</td>\\n          <td>{{collision.wallDetectionReward | number: '3.2-2'}}</td>\\n          <td>{{collision.agentDetectionReward | number: '3.2-2'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div id=\\\"chart-control-panel\\\">\\n    <mat-button-toggle-group class=\\\"button-row\\\">\\n      <button mat-button (click)=\\\"logEvaluation()\\\">Log Evaluation</button>\\n      <button mat-button color=\\\"accent\\\" *ngIf=\\\"!isPausedPlotting\\\" (click)=\\\"pausePlotting()\\\">Pause Plotting</button>\\n      <button mat-button color=\\\"warn\\\" *ngIf=\\\"isPausedPlotting\\\" (click)=\\\"pausePlotting()\\\">Run Plotting</button>\\n    </mat-button-toggle-group>\\n    <div id=\\\"reward-chart\\\" style=\\\"width:100%; height: 300px;\\\"></div>\\n  </div>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/simulation/simulation.component.html\n// module id = ./src/app/simulation/simulation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { World, WorldObject, Item, Wall, RLAgent } from 'learning-agents-model';\n\nimport { Specs } from './utils/specs.utility';\nimport { CollisionStats } from './utils/collision-stats.utility';\nimport { CanvasUtility } from './utils/canvas.utility';\nimport { Flot } from './utils/flot.charts';\n\ndeclare let $: any;\ndeclare let window: any;\ndeclare let document: any;\ndeclare let setInterval: any;\n\n@Component({\n  selector: 'app-simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.css']\n})\nexport class SimulationComponent implements OnInit {\n  array: string[];\n  // derived from globals\n  canvas: any;\n  \n  // World and View\n  world: World;\n  width: number = 600;\n  height: number = 600;\n  maxAgents: number = 2;\n  maxItems: number = 50;\n  trainingPeriod: any = 2.5e6;\n  \n  // Simulation and Controls\n  simSpeedIndex: number = 1;\n  simBoostIntervals: Array<number> = [1, 1, 3, 3];\n  simSpeedIntervals: Array<number> = [150, 41, 41, 41];\n  iterationsPerTick: number;\n  ticksPerSecond: number;\n  simIntervalId: number;\n  simEvaluationInterval: number = 500;\n  simEvaluationIntervalId: number;\n  isPaused: boolean;\n  isPausedDrawing: boolean;\n  isPausedPlotting: boolean;\n  valueAlternationTick: number = 0;\n  simValueAlternationIntervalId: number;\n\n  // Evaluation Utils\n  specs: Array<Specs>;\n  collisionStats: CollisionStats;\n  chart: Flot;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.init();\n  }\n\n  private init(): void {\n    this.world = new World(this.width, this.height, this.maxAgents, this.maxItems, this.trainingPeriod);\n    this.world.setBoundaryCondition('stable');\n    this.specs = new Array<Specs>();\n    for (const [i, agent] of this.world.agents.entries()) {\n      this.specs.push(new Specs(i + 1, agent));\n    }\n    this.collisionStats = new CollisionStats(this.world.getAgents(), this.world.getItems());\n    this.canvas = new CanvasUtility('simulation', document, this.width, this.height);\n    this.chart = new Flot('reward-chart', document, $, this.collisionStats);\n    this.isPaused = false;\n    this.isPausedDrawing = false;\n    this.isPausedPlotting = false;\n\n    this.start();\n    this.array = [];\n  }\n\n  private draw(): void {\n    this.canvas.draw(this.world);\n  }\n\n  public start(): void {\n    console.log('[' + new Date().toISOString() + ']: Training of Agent is starting!'\n      + '\\nStarting training phase!'\n      + '\\nCurrent Timestamp: ' + new Date().getTime())\n    this.isPaused = false;\n    this.setSimulationInterval(this.simSpeedIndex);\n    this.setEvaluationInterval();\n  }\n\n  public pause(): void {\n    this.isPaused = true;\n    this.setSimulationInterval(this.simSpeedIndex);\n    this.setEvaluationInterval();\n  }\n\n  public pauseDrawing(): void {\n    this.isPausedDrawing = !this.isPausedDrawing;\n  }\n\n  public pausePlotting(): void {\n    this.isPausedPlotting = !this.isPausedPlotting;\n    this.setEvaluationInterval();\n  }\n\n  public reset(): void {\n    this.world.reset();\n    this.collisionStats.reset(this.world.getAgents(), this.world.getItems());\n    this.chart.reset();\n    this.start();\n  }\n\n  public goMax(): void {\n    this.setSimulationInterval(3);\n  }\n\n  public goFast(): void {\n    this.setSimulationInterval(2);\n  }\n\n  public goNormal(): void {\n    this.setSimulationInterval(1);\n  }\n\n  public goSlow(): void {\n    this.setSimulationInterval(0);\n  }\n\n  private setSimulationInterval(simSpeed: number = 1): void {\n    window.clearInterval(this.simIntervalId);\n    this.setSimulationParameters(simSpeed);\n    if (!this.isPaused) {\n      const self = this;\n      const func = function () {\n        self.tick();\n      };\n      this.simIntervalId = setInterval(func, this.simSpeedIntervals[simSpeed]);\n    }\n  }\n\n  private setSimulationParameters(simSpeed: number): void {\n    this.simSpeedIndex = simSpeed;\n    this.iterationsPerTick = Math.pow(this.simBoostIntervals[simSpeed], this.simSpeedIndex);  // boost by the power of simSpeedIndex\n    this.ticksPerSecond = Math.floor(1000 / this.simSpeedIntervals[this.simSpeedIndex] * this.iterationsPerTick);\n  }\n\n  private tick(): void {\n    for (let i = 0; i < this.iterationsPerTick; i++) {\n      if (this.world.clock() === this.trainingPeriod) {\n        // when trainings period is over, set value alternation intervall\n        this.activateCurrentTestSetup();\n        console.log('[' + new Date().toISOString() + ']: Training of Agent is done!'\n          + '\\nStarting evaluation phase with the chosen setup!'\n          + '\\nCurrent Timestamp: ' + new Date().getTime());\n      }\n      this.tickSimulationLogic();\n    }\n  }\n\n  private activateCurrentTestSetup() {\n    this.setValueAlternationInterval(); // deactivate on static valuation\n    this.world.setBoundaryCondition('scarce'); // other option: 'scarce'\n  }\n\n  private tickSimulationLogic(): void {\n    this.world.tick();\n    this.collisionStats.tick(\n      this.world.clock(),\n      this.world.getAgents(),\n      this.world.getItems(),\n      this.ticksPerSecond);\n    if (this.shouldUpdateCanvas()) { this.draw(); }\n  }\n\n  /**\n   * Draw at speeds:\n   * - below FAST -> regularly\n   * - at FAST -> every 5th step\n   * - at MAX -> every 2nd step\n   */\n  private shouldUpdateCanvas(): boolean {\n    return !this.isPausedDrawing;\n  }\n\n  /**\n   * This Method has its own Update Interval independent of the simulation.\n   */\n  private updateChart(): void {\n    this.chart.plot(this.world.getAgents().length);\n  }\n\n  private setEvaluationInterval(milliseconds: number = 1000): void {\n    window.clearInterval(this.simEvaluationIntervalId);\n\n    if (!this.isPausedPlotting) {\n      const self = this;\n      const func = function () {\n        self.updateChart();\n      };\n      this.simEvaluationIntervalId = setInterval(func, milliseconds);\n    }\n  }\n\n  public logEvaluation() {\n    this.logSpecs();\n    this.logCollisionHistory();\n    this.logItemChangeHistory();\n    this.logAgentBrainState();\n  }\n\n  private logSpecs() {\n    let body = JSON.stringify(this.specs);\n\n    $.post('http://localhost:8000/log/specs', { data: body }, (res) => {\n      console.log(res);\n    });\n\n  }\n\n  private logCollisionHistory(): void {\n    for (const i of this.collisionStats.collisionHistory.keys()) {\n      let data = {};\n      data['agentId'] = i.toString();\n      data['collisionHistory'] = JSON.stringify(this.collisionStats.collisionHistory[i]);\n\n      let body = JSON.stringify(data);\n\n      $.post('http://localhost:8000/log/collision-history/', { data: body }, (res) => {\n        console.log(res);\n      });\n    }\n  }\n\n  private logItemChangeHistory(): void {\n    let data = {};\n    data['itemChangeHistory'] = JSON.stringify(this.collisionStats.itemChangeHistory);\n\n    let body = JSON.stringify(data);\n\n    $.post('http://localhost:8000/log/item-history/', { data: body }, (res) => {\n      console.log(res);\n    });\n  }\n\n  private logAgentBrainState(): void {\n    for (const [i, agent] of this.world.getAgents().entries()) {\n      let data = {};\n      data['agentId'] = i.toString();\n      data['brainState'] = JSON.stringify(agent.brain.toJSON());\n\n      let body = JSON.stringify(data);\n\n      $.post('http://localhost:8000/log/agent-brain-state/', { data: body }, (res) => {\n        console.log(res);\n      });\n    }\n  }\n\n  private alternateValues() {\n    if(this.world.clock() > this.trainingPeriod) {\n      this.valueAlternationTick++;\n      let values = [-1, -1, 1, -1];\n      if (this.valueAlternationTick % 2 === 0) { values = [-1, 1, -1, -1]; }\n  \n      WorldObject.setValues(values);\n    }\n\n  }\n\n  setValueAlternationInterval(milliseconds: number = 4630 * 1000): any { // ca. 1.000.000 iterations\n    window.clearInterval(this.simValueAlternationIntervalId);\n\n    if(!this.isPaused) {\n      const self = this;\n      const func = function () {\n        self.alternateValues();\n        const item0ofAgent0 = self.world.getAgents()[0].sensory.totalItem0Collisions\n        const item1ofAgent0 = self.world.getAgents()[0].sensory.totalItem1Collisions\n        const item0ofAgent1 = self.world.getAgents()[1].sensory.totalItem0Collisions\n        const item1ofAgent1 = self.world.getAgents()[1].sensory.totalItem1Collisions\n        console.log('[' + new Date().toISOString() + ']: Values: ' + WorldObject.getValues() + '\\t');\n        console.log('[' + new Date().toISOString() + ']: Agent 1: ' + item0ofAgent0 + ' vs. ' + item1ofAgent0);\n        console.log('[' + new Date().toISOString() + ']: Agent 2: ' + item0ofAgent1 + ' vs. ' + item1ofAgent1);\n      };\n      this.simValueAlternationIntervalId = setInterval(func, milliseconds);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/simulation.component.ts","import { World, Item, Wall, RLAgent, SensedObject, Point2D, Lidar, Radar } from 'learning-agents-model';\n\nexport class CanvasUtility {\n\n  agentView: boolean = false;\n\n  width: number;\n  height: number;\n\n  private defaultFillColor = \"rgba(255, 255, 255, 0)\";    // #464646 strong grey\n  private defaultStrokeColor = \"rgba(70, 70, 70, 1) 0.5px\";    // #464646 strong grey\n\n  private detectedNothingStrokeStyle = \"rgba(192, 192, 192, 0.5)\";  // #c4c4c4 light grey\n  private detectedWallStrokeStyle = \"rgba(70, 70, 70, 1)\";   // #ff8000 strong orange\n  private detectedItem1StrokeStyle = \"rgba(0, 120, 0, 0.65)\";  // #b30000 dark red\n  private detectedItem2StrokeStyle = \"rgba(179, 0, 0, 0.65)\";  // #96ff96 grün\n  private detectedItem3StrokeStyle = \"rgba(0, 0, 180, 0.9)\";  // #96ff96 grün\n\n  private detectedNothingFillStyle = \"rgba(215, 215, 215, 0.15)\";  // #c4c4c4 light grey\n  private detectedWallFillStyle = \"rgba(70, 70, 70, 0.15)\";   // #ff8000 strong orange\n  private detectedItem1FillStyle = \"rgba(0, 240, 0, 0.15)\";  // #96ff96 grün\n  private detectedItem2FillStyle = \"rgba(240, 0, 0, 0.15)\";  // #96ff96 grün\n  private detectedItem3FillStyle = \"rgba(0, 0, 240, 0.15)\";  // #96ff96 grün\n\n  private wallStrokeStyle = \"rgba(70, 70, 70, 1)\";  // #c4c4c4 light grey\n  private item1FillStyle = \"rgba(150, 255, 150, 1)\";   // #ff9696 light red\n  private item2FillStyle = \"rgba(255, 150, 150, 1)\";  // #96ff96 rot\n  private identifierFillStyle = \"rgba(230, 230, 230, 1)\";\n  private agentFillStyle = (r: number) => { return \"rgb(\" + r + \", 55, 55)\" };\n\n  ctx: CanvasRenderingContext2D;\n\n  constructor(canvas: string, document: any, width: number, height: number) {\n    this.ctx = document.getElementById(canvas).getContext(\"2d\");\n    this.width = width;\n    this.height = height;\n  }\n\n  public draw(world: World): void {\n    // reset canvas\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    // draw agents\n    // color agent based on reward it is experiencing at the moment\n    let agents: RLAgent[] = world.agents;\n    this.drawAgents(agents);\n\n    // draw items\n    let items: Item[] = world.items;\n    this.drawItems(items);\n\n    // draw walls in environment\n    let walls: Wall[] = world.walls;\n    this.drawWalls(walls);\n  }\n\n  private drawAgents(agents: RLAgent[]): void {\n    for (const agent of agents) {\n      this.drawAgentSensory(agent);\n    }\n    for (const [i, agent] of agents.entries()) {\n      this.drawAgentBody(agent);\n      this.drawAgentIdentifier(i + 1, agent);\n    }\n  }\n\n  private drawAgentSensory(agent: RLAgent): void {\n    for (const sensor of agent.sensory.sensors) {\n      if (sensor.type === 0) {\n        this.drawLidar(agent.location, sensor);\n      } else if (sensor.type === 1) {\n        this.drawRadar(sensor);\n      }\n    }\n  }\n\n  private drawLidar(p1: Point2D, sensor: Lidar): void {\n    if (sensor.getSensedObject().type === -1) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedNothingFillStyle;\n    }\n    else if (sensor.getSensedObject().type === 0) {\n      this.ctx.strokeStyle = this.detectedWallStrokeStyle;\n      this.ctx.fillStyle = this.detectedWallFillStyle;\n    }\n    else if (sensor.getSensedObject().type === 1) {\n      this.ctx.strokeStyle = this.detectedItem1StrokeStyle;\n      this.ctx.fillStyle = this.detectedItem1FillStyle;\n    }\n    else if (sensor.getSensedObject().type === 2) {\n      this.ctx.strokeStyle = this.detectedItem2StrokeStyle;\n      this.ctx.fillStyle = this.detectedItem2FillStyle;\n    }\n    else if (sensor.getSensedObject().type === 3) {\n      this.ctx.strokeStyle = this.detectedItem3StrokeStyle;\n      this.ctx.fillStyle = this.detectedItem3FillStyle;\n    }\n\n    const x1 = p1.x;\n    const y1 = p1.y;\n    const proximity = (sensor.getSensedObject().type === -1) ? sensor.maxRange : sensor.sensedObject.proximity;\n    const x2 = p1.x + proximity * Math.sin(sensor.angle);\n    const y2 = p1.y + proximity * Math.cos(sensor.angle);\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n  }\n\n  private drawRadar(sensor: Radar): any {\n    if (sensor.getSensedObject().type === -1) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedNothingFillStyle;\n    }\n    else if (sensor.getSensedObject().type === 0) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedWallFillStyle;\n    }\n    else if (sensor.getSensedObject().type === 1) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedItem1FillStyle;\n    }\n    else if (sensor.getSensedObject().type === 2) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedItem2FillStyle;\n    }\n    else if (sensor.getSensedObject().type === 3) {\n      this.ctx.strokeStyle = this.detectedNothingStrokeStyle;\n      this.ctx.fillStyle = this.detectedItem3FillStyle;\n    }\n\n    const x0 = sensor.location.x;\n    const y0 = sensor.location.y;\n    const width = sensor.width;\n    const height = sensor.height;\n\n    this.ctx.fillRect(x0, y0, width, height);\n    this.ctx.strokeRect(x0, y0, width, height);\n  }\n\n  private drawAgentBody(agent: RLAgent): void {\n    this.ctx.strokeStyle = this.defaultStrokeColor;\n    this.ctx.fillStyle = this.agentFillStyle(55);\n    this.ctx.beginPath();\n    this.ctx.arc(agent.location.x, agent.location.y, agent.size, 0, Math.PI * 2, true);\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n\n  private drawAgentIdentifier(id: number, agent: RLAgent) {\n    this.ctx.fillStyle = this.identifierFillStyle;\n    this.ctx.font = \"12px Roboto\";\n    const offsetX = (id < 10) ? -3 : -7;\n    const offsetY = 4;\n    this.ctx.fillText(id.toString(), agent.location.x + offsetX, agent.location.y + offsetY);\n  }\n\n  private drawItems(items: Array<Item>): void {\n    this.ctx.strokeStyle = this.defaultStrokeColor;\n    if (!this.agentView) {\n      for (const item of items) {\n        if (item.type === 1) { this.ctx.fillStyle = this.item1FillStyle; }\n        if (item.type === 2) { this.ctx.fillStyle = this.item2FillStyle; }\n        this.ctx.beginPath();\n        this.ctx.arc(item.location.x, item.location.y, item.size, 0, Math.PI * 2, true);\n        this.ctx.fill();\n        this.ctx.stroke();\n      }\n    }\n  }\n\n  private drawWalls(walls: Wall[]): void {\n    this.ctx.strokeStyle = this.wallStrokeStyle;\n    this.ctx.beginPath();\n    for (const wall of walls) {\n      this.ctx.lineWidth = 0.5;\n      this.ctx.moveTo(wall.p1.x, wall.p1.y);\n      this.ctx.lineTo(wall.p2.x, wall.p2.y);\n    }\n    this.ctx.stroke();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/utils/canvas.utility.ts","import { RLAgent, Item } from 'learning-agents-model';\n\nimport { Collisions } from './collision.utility';\n\nexport class CollisionStats {\n\n  public collisions: Array<Collisions>;\n  public collisionHistory: Array<Array<Array<number>>>;\n  public itemChange: Array<number>;\n  public itemChangeHistory: Array<Array<number>>;\n  public historicalDataTick: number;\n\n  constructor(agents: Array<RLAgent>, items: Array<Item>) {\n    this.init(agents, items);\n  }\n\n  private init(agents: Array<RLAgent>, items: Array<Item>): void {\n    this.resetCollisionRecords(agents);\n    this.resetItemChangeRecord();\n    const currentSecond = this.getTimestamp();\n    this.initCollisionHistory(agents, currentSecond);\n    this.initItemChangeHistory(items, currentSecond);\n    this.historicalDataTick = 1;\n  }\n\n  private resetItemChangeRecord(): void {\n    this.itemChange = [0, 0, 0];\n  }\n\n  private initItemChangeHistory(items: Array<Item>, currentSecond: number): void {\n    this.itemChangeHistory = new Array<Array<number>>();\n    const [item0, item1] = this.getItemCounts(items);\n    this.itemChangeHistory.push([currentSecond, items.length, item0, item1]);\n  }\n\n  private getItemCounts(items: Array<Item>): [number, number] {\n    let item0 = 0;\n    let item1 = 0;\n    for (const item of items) {\n      if (item.type === 1) { item0++; }\n      else if (item.type === 2) { item1++; }\n    }\n    return [item0, item1];\n  }\n\n  private initCollisionHistory(agents: any[], currentSecond: number): void {\n    this.collisionHistory = new Array<Array<Array<number>>>();\n    for (const id of agents.keys()) {\n      this.collisionHistory.push([[currentSecond, 0, 0, 0, 0]]);\n    }\n  }\n\n  public reset(agents: Array<RLAgent>, items: Array<Item>): void {\n    this.init(agents, items);\n  }\n\n  public tick(worldClock: number, agents: Array<RLAgent>, items: Array<Item>, ticksPerSecond: number): void {\n    this.tickCollisions(agents);\n    this.tickItemChange(items);\n\n    const timestamp = this.getTimestamp();\n    this.tickCollisionHistory(worldClock, timestamp, agents, ticksPerSecond);\n    this.tickItemHistory(worldClock, timestamp, items, ticksPerSecond);\n    this.historicalDataTick++;\n  }\n\n  private tickCollisions(agents: Array<RLAgent>): void {\n    for (const [i, agent] of agents.entries()) {\n      this.recordAgentCollisions(i, agent);\n    }\n  }\n\n  private tickItemChange(items: Array<Item>): void {\n    const [item0, item1] = this.getItemCounts(items);\n    this.itemChange[0] += items.length;\n    this.itemChange[1] += item0;\n    this.itemChange[2] += item1;\n  }\n\n  private recordAgentCollisions(id: number, agent: RLAgent): void {\n    this.collisions[id].totalItem0Collisions = agent.sensory.totalItem0Collisions;\n    this.collisions[id].totalItem1Collisions = agent.sensory.totalItem1Collisions;\n\n    this.collisions[id].item0Collisions += agent.sensory.item0CollisionsPerTick;\n    this.collisions[id].item1Collisions += agent.sensory.item1CollisionsPerTick;\n    this.collisions[id].wallDetectionReward += agent.sensory.wallDetectionRewardPerTick;\n    this.collisions[id].agentDetectionReward += agent.sensory.agentDetectionRewardPerTick;\n  }\n\n  private tickCollisionHistory(worldClock: number, timestamp: number, agents: Array<RLAgent>, ticksPerSecond: number): void {\n    if (worldClock % ticksPerSecond === 0) {\n      for (const id of agents.keys()) {\n        this.recordAgentsCollisionHistory(id, timestamp, ticksPerSecond);\n      }\n      this.resetCollisionRecords(agents);\n    }\n  }\n\n  private getTimestamp(): number {\n    return new Date().getTime();\n  }\n\n  private recordAgentsCollisionHistory(id: number, timestamp: number, ticksPerSecond: number) {\n    this.collisionHistory[id].push(\n      [timestamp,\n        this.collisions[id].item0Collisions,\n        this.collisions[id].item1Collisions,\n        this.collisions[id].wallDetectionReward,\n        this.collisions[id].agentDetectionReward]\n    );\n  }\n\n  private resetCollisionRecords(agents: Array<RLAgent>) {\n    this.collisions = new Array<Collisions>(agents.length);\n    for (const [id, agent] of agents.entries()) {\n      this.collisions[id] = new Collisions(agent.sensory.totalItem0Collisions, agent.sensory.totalItem1Collisions);\n    }\n  }\n\n  private tickItemHistory(worldClock: number, timestamp: number, items: Array<Item>, ticksPerSecond: number): void {\n    if (worldClock % ticksPerSecond === 0) {\n      this.itemChangeHistory.push(\n        [timestamp,\n          this.itemChange[0] / ticksPerSecond,\n          this.itemChange[1] / ticksPerSecond,\n          this.itemChange[2] / ticksPerSecond]\n      );\n      this.resetItemChangeRecord();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/utils/collision-stats.utility.ts","export class Collisions {\n  totalItem0Collisions: number;\n  totalItem1Collisions: number;\n  \n  item0Collisions: number;\n  item1Collisions: number;\n  wallDetectionReward: number;\n  agentDetectionReward: number;\n\n  constructor(totalItem0: number, totalItem1: number) {\n    this.totalItem0Collisions = totalItem0;\n    this.totalItem1Collisions = totalItem1;\n    \n    this.item0Collisions = 0;\n    this.item1Collisions = 0;\n    this.wallDetectionReward = 0;\n    this.agentDetectionReward = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/utils/collision.utility.ts","import { CollisionStats } from \"./collision-stats.utility\";\n\nexport class Flot {\n  stats: CollisionStats;\n\n  private container: any;\n  private $: any;\n  private xaxisLength: number;\n  private yInterval: Array<number> = [-140, 15];\n  private opt: any;\n  private getOptsFor: Function = (xMin: number, xMax: number, yMin: number = this.yInterval[0], yMax: number = this.yInterval[1]): any => {\n    return {\n      grid: {\n        borderWidth: 1,\n        minBorderMargin: 20,\n        labelMargin: 10,\n        margin: {\n          top: 10,\n          bottom: 10,\n          left: 10,\n        }\n      },\n      xaxis: { mode: \"time\", timeformat: \"%I:%M\", min: xMin, max: xMax, borderWidth: 1 },\n      yaxis: { min: yMin, max: yMax }\n    };\n  };\n\n  constructor(htmlId: string, document: any, $: any, stats: CollisionStats, xMax: number = 1000) {\n    this.container = document.getElementById(htmlId);\n    this.$ = $;\n    this.stats = stats;\n    this.xaxisLength = xMax;\n    this.opt = this.getOptsFor(new Date().getTime(), new Date().getTime() + 1000 * this.xaxisLength, this.yInterval[0], this.yInterval[1]);\n  }\n\n  private init(): any {\n  }\n\n  public reset(): void {\n    this.init();\n  }\n\n  public plot(numOfAgents: number): void {\n    const data = Array<any>();\n    for (let i = 0; i < numOfAgents; i++) {\n      const res = this.gatherData(i, numOfAgents);\n      data.push(res[0]);\n      data.push(res[1]);\n      data.push(res[2]);\n      data.push(res[3]);\n    }\n    this.ensureXAxisInterval();\n\n    this.$.plot(this.container, data, this.opt);\n  }\n\n  private gatherData(i: number, numOfAgents: number) {\n    const [item0, item1, wall, agent] = this.getHistoricalDataForAgent(i, numOfAgents);\n    return [{\n      label: \"Agent \" + (i + 1) + \" (item0)\",\n      data: item0,\n      lines: { fill: false, lineWidth: 0.4 },\n      points: { show: false },\n      shadowSize: 0\n    }, {\n      label: \"Agent \" + (i + 1) + \" (item1)\",\n      data: item1,\n      lines: { fill: false, lineWidth: 0.4 },\n      points: { show: false },\n      shadowSize: 0\n    }, {\n      label: \"Agent \" + (i + 1) + \" (wall)\",\n      data: wall,\n      lines: { fill: false, lineWidth: 0.4 },\n      points: { show: false },\n      shadowSize: 0\n    }, {\n      label: \"Agent \" + (i + 1) + \" (agent)\",\n      data: agent,\n      lines: { fill: false, lineWidth: 0.4 },\n      points: { show: false },\n      shadowSize: 0\n    }];\n  }\n\n  private getHistoricalDataForAgent(agentId: number, numOfAgents: number): Array<any> {\n    const item0 = new Array<Array<number>>(1000);\n    const item1 = new Array<Array<number>>(1000);\n    const wall = new Array<Array<number>>(1000);\n    const agent = new Array<Array<number>>(1000);\n    const lowerBound = Math.max(0, this.stats.collisionHistory[agentId].length - 1000);\n    for (let j = lowerBound; j < this.stats.collisionHistory[agentId].length; j++) {\n      item0[j - lowerBound] = [this.stats.collisionHistory[agentId][j][0], this.stats.collisionHistory[agentId][j][1]]\n      item1[j - lowerBound] = [this.stats.collisionHistory[agentId][j][0], this.stats.collisionHistory[agentId][j][2]]\n      wall[j - lowerBound] = [this.stats.collisionHistory[agentId][j][0], this.stats.collisionHistory[agentId][j][3]]\n      agent[j - lowerBound] = [this.stats.collisionHistory[agentId][j][0], this.stats.collisionHistory[agentId][j][4]]\n    }\n\n    return [item0, item1, wall, agent];\n  }\n\n  private ensureXAxisInterval() {\n    const length = this.stats.collisionHistory[0].length;\n    if (length > this.xaxisLength) {\n      const xMin = this.stats.collisionHistory[0][length - this.xaxisLength - 1][0];\n      const xMax = this.stats.collisionHistory[0][length - 1][0];\n      this.opt = this.getOptsFor(xMin, xMax);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/utils/flot.charts.ts","import { RLAgent } from 'learning-agents-model';\n\nexport class Specs {\n  id: number;\n  alpha: number;\n  epsilon: number;\n  gamma: number;\n  experienceSize: number;\n  experienceAddEvery: number;\n  learningStepsPerIteration: number;\n  tdErrorClamp: number;\n  numHiddenUnits: number;\n\n  constructor(id: number, agent: RLAgent) {\n    this.id = id;\n    this.alpha = agent.getOpt().get('alpha');\n    this.epsilon = agent.getOpt().get('epsilon');\n    this.gamma = agent.getOpt().get('gamma');\n    this.experienceSize = agent.getOpt().get('experienceSize');\n    this.experienceAddEvery = agent.getOpt().get('experienceAddEvery');\n    this.learningStepsPerIteration = agent.getOpt().get('learningStepsPerIteration');\n    this.tdErrorClamp = agent.getOpt().get('tdErrorClamp');\n    this.numHiddenUnits = agent.getOpt().get('numHiddenUnits');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/simulation/utils/specs.utility.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.prod.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment.prod';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}